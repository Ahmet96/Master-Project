{"ast":null,"code":"var _jsxFileName = \"/home/ahmet/Desktop/TPProject/ReactJS/FrontEndTP/src/products/pages/NewProduct.js\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MenuItem, FormControl, Select, InputLabel } from \"@material-ui/core\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_MAXLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./ProductForm.css\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst NewProduct = () => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [currencies, setCurrency] = useState(['TL', 'USD', 'GBP', 'EU']);\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    },\n    price: {\n      value: \"\",\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    },\n    category: {\n      value: null,\n      isValid: false\n    },\n    currency: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"price\", formState.inputs.price.value);\n      formData.append(\"category\", formState.inputs.category.value);\n      formData.append(\"currency\", formState.inputs.currency.value);\n      formData.append(\"creator\", auth.userId);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\"http://localhost:5000/api/products\", \"POST\", formData);\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  const onCurrencyChange = async e => {\n    const currencyCode = e.target.value;\n    await fetch('http://localhost:5000/api/products').then(response => response.json()).then(data => {\n      setCurrency(currencyCode);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"product-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"price\",\n    element: \"input\",\n    label: \"Price\",\n    validators: [VALIDATOR_REQUIRE(\"123456789\")],\n    errorText: \"Please enter a valid price.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"category\",\n    element: \"input\",\n    label: \"Category\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid Category name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    styles: {\n      minWidth: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Currency\"), /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCurrencyChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, currencies.map(currency => /*#__PURE__*/React.createElement(MenuItem, {\n    value: currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 18\n    }\n  }, currency)))), /*#__PURE__*/React.createElement(ImageUpload, {\n    id: \"image\",\n    onInput: inputHandler,\n    errorText: \"Please provide an image.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"ADD PLACE\")));\n};\n\nexport default NewProduct;","map":{"version":3,"sources":["/home/ahmet/Desktop/TPProject/ReactJS/FrontEndTP/src/products/pages/NewProduct.js"],"names":["React","useContext","useState","useHistory","MenuItem","FormControl","Select","InputLabel","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_MAXLENGTH","useForm","useHttpClient","AuthContext","red","NewProduct","auth","isLoading","error","sendRequest","clearError","currencies","setCurrency","formState","inputHandler","title","value","isValid","description","price","image","category","currency","history","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","userId","push","err","onCurrencyChange","e","currencyCode","target","fetch","then","response","json","data","minWidth","map"],"mappings":"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","sourcesContent":["import React, { useContext,useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {MenuItem, FormControl, Select,InputLabel} from \"@material-ui/core\"\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_MAXLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./ProductForm.css\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst NewProduct = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [currencies, setCurrency] = useState(['TL','USD','GBP','EU'])\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      price: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n      category: {\n        value: null,\n        isValid: false,\n      },\n      currency: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"price\", formState.inputs.price.value);\n      formData.append(\"category\", formState.inputs.category.value);\n      formData.append(\"currency\", formState.inputs.currency.value);\n      formData.append(\"creator\", auth.userId);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\"http://localhost:5000/api/products\", \"POST\", formData);\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  const onCurrencyChange = async (e) => {\n  const currencyCode = e.target.value;\n  await fetch('http://localhost:5000/api/products')\n  .then((response) => response.json())\n  .then((data) =>{\n    setCurrency(currencyCode)\n  }\n  )}\n\n\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"product-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"price\"\n          element=\"input\"\n          label=\"Price\"\n          validators={[VALIDATOR_REQUIRE(\"123456789\")]}\n          errorText=\"Please enter a valid price.\"\n          onInput={inputHandler}\n        /> \n      \n        <Input\n          id=\"category\"\n          element=\"input\"\n          label=\"Category\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid Category name.\"\n          onInput={inputHandler}\n        />\n       {/* <Input\n          id=\"currency\"\n          element=\"input\"\n          label=\"Currency\"\n          validators={[VALIDATOR_MAXLENGTH(3)]}\n          errorText=\"Please enter a valid Currency Type, not longer than 3 words!\"\n          Placeholder=\"Eg:USD,TL\"\n          onInput={inputHandler}        \n        /> */}\n        <FormControl styles={{ minWidth:100}}>\n        <InputLabel>Currency</InputLabel>\n          <Select variant='outlined'\n          onChange={onCurrencyChange}\n          >\n            {currencies.map((currency) => (\n                 <MenuItem value={currency}>\n                   {currency}\n                 </MenuItem>\n            \n            ))}\n          </Select>\n        </FormControl>\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewProduct;\n"]},"metadata":{},"sourceType":"module"}