{"ast":null,"code":"var _jsxFileName = \"/home/ahmet/Desktop/TPProject/ReactJS/FrontEndTP/src/shared/components/FormElements/Input.js\";\nimport { MenuItem } from '@material-ui/core';\nimport React, { useReducer, useEffect, useState } from 'react';\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [currencies, setCurrency] = useState(['TL', 'USD', 'GBP', 'EU']);\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, props.label), element, MaterialUI, !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 55\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/ahmet/Desktop/TPProject/ReactJS/FrontEndTP/src/shared/components/FormElements/Input.js"],"names":["MenuItem","React","useReducer","useEffect","useState","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","currencies","setCurrency","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","MaterialUI","errorText"],"mappings":"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","sourcesContent":["import { MenuItem } from '@material-ui/core';\nimport React, { useReducer, useEffect,useState } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [currencies, setCurrency] = useState(['TL','USD','GBP','EU'])\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n     \n  \n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {MaterialUI}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}